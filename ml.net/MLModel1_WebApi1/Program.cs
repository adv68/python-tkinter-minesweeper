// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.ML;
using Microsoft.OpenApi.Models;
using MinesweeperML.NET;
using System.Threading.Tasks;

// Configure app
var builder = WebApplication.CreateBuilder(args);

// Add model engine pool service to the app builder for dependency injection
builder.Services.AddPredictionEnginePool<MLModel1.ModelInput, MLModel1.ModelOutput>()
    .FromFile("MLModel1.zip");

//builder.Services.AddPredictionEnginePool<MinesweeperInput, MinesweeperOutput>().FromFile("LightGbmModel.zip");

// configure swagger API documentation
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo { Title = "My API", Description = "Docs for my API", Version = "v1" });
});

// build the app
var app = builder.Build();

// configure swagger API middleware
app.UseSwagger();
app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", "My API V1");
});

// Define prediction route & handler
app.MapPost("/predict",
    async (PredictionEnginePool<MLModel1.ModelInput, MLModel1.ModelOutput> predictionEnginePool, MLModel1.ModelInput input) =>
        await Task.FromResult(predictionEnginePool.Predict(input)));

//app.MapPost("/predict2",
//    async (PredictionEnginePool<MinesweeperInput, MinesweeperOutput> predictionEnginePool, MinesweeperInput input) =>
//        await Task.FromResult(predictionEnginePool.Predict(input)));

// Run app
app.Run();

